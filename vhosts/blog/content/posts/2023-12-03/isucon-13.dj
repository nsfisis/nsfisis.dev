---
[article]
uuid = "d0c404bb-4700-4a6f-9911-621e9872d8c6"
title = "ISUCON 13 に参加した"
description = "ISUCON 13 に参加した。チーム名「うつしもゆ」、最終スコア 13,580 点"
tags = [
  "isucon",
]

[[article.revisions]]
date = "2023-12-03"
remark = "公開"
---
{#intro}
# はじめに

先日 11月25日、 [ISUCON 13](https://isucon.net/archives/57801192.html) に参加した。
ISUCON への参加は今回が初めてとなる。
私 nsfisis の1人チーム「うつしもゆ」として参加し、最終スコアは 13,580 点だった。使用言語は Go。

::: note
「ISUCON」は、LINEヤフー株式会社の商標または登録商標です。 [ISUCON 公式サイトはこちら。](https://isucon.net/)
:::

{#goals}
# 目標

今回は初参加ということもあり、目標を以下のように定めた。

* 正のスコアを取る

  * ISUCON ではサーバ動作の整合性がチェックされ、失敗するとスコア 0 となる

* 速度改善以外に時間を浪費しない (= ハマらない)

  * プロビジョニング、デバッグ、ミドルウェアの設定方法の調査など、性能改善に寄与しない時間を最小限にする

{#strategy}
# 戦略

ISUCON で高スコアを出す戦略については、戦闘力の高い方々が良質な記事を書いてくださっている。
ここでは、上述したような低い目標を達成するための戦略について書こうと思う。

{#do-not-destroy-environment}
## 環境を破壊しない

ミドルウェアの設定やアプリケーションコードなど、変更を加えるあらゆるものは、必ずバックアップを取るか Git で管理する。
復旧不能になって環境ごと作り直すことだけは必ず避ける。

{#revert-changes-immediately}
## すぐに変更を取り消す

それでも壊してしまったときは、即座に変更を取り消す。壊れた理由を調べることに固執しない。

{#do-small-deployment}
## 小さくデプロイする

一度に複数の変更を加えず、可能な限り小さな単位でデプロイする。そしてその都度ベンチマークを走らせ、整合性チェックが通るかどうかを (当然速くなっているかどうかも) 確かめる。

{#use-familiar-tools}
## 使い慣れた道具を使う

使用する言語、ミドルウェア、ツール類を、使い慣れたものに限定する。
「このツールのオプションはほとんどそらで指定できる」と言えるようなものだけを使う。
「自分では使ったことがないが ISUCON 強者がお勧めしていた」といった理由でツールを選定しない (もちろん、本番までに練習して習熟するという選択肢は存在する)。

{#performance-optimization}
# パフォーマンスの最適化

もっと強い人の記事を参考にしてほしい。

{#outro}
# おわりに

事前の準備も含めて、大変楽しいイベントだった。次回があるなら是非また参加したい。その際は、順位やスコアを目標として立てられるようになりたいものである。
