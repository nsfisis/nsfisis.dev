---
[article]
uuid = "3fbe0b8c-216e-48f6-b905-c0d361b94542"
title = "PHPerKaigi 2021"
description = "2021-03-26 から 2021-03-28 にかけて開催された、PHPerKaigi 2021 に参加した。"
tags = [
  "conference",
  "php",
  "phperkaigi",
]

[[article.revisions]]
date = "2021-03-30"
remark = "公開"

[[article.revisions]]
date = "2025-04-09"
remark = "それぞれの発表に関するメモ部分を削除し、感想のみに"
---
{#report}
# PHPerKaigi 2021 参加レポ

2021-03-26 から 2021-03-28
にかけて開催された、[PHPerKaigi 2021](https://phperkaigi.jp/2021/)
に一般参加者として参加した。
弊社[デジタルサーカス株式会社](https://www.dgcircus.com/)
(今年1月から勤務)
はダイヤモンドスポンサーとなっており、スポンサー枠のチケットを使わせていただいた。

このようなカンファレンスには初めて参加するのでかねてより心待ちにしていたのだが、生憎2日目から体調を崩してしまい、この記事も途中までとなっている。まだ見ていないセッションも多いが、ひとまず現時点での参加レポを書いておく。

発表はトラック A、B に分かれていたのだが、今回はすべて A
トラックを視聴している (切り替えるのが面倒だっただけ)。

{#day-0}
## Day 0 前夜祭 (2021/03/27)

{#1730-a}
### 17:30 [A] LAMPをこじらせてサーバーレスに乗り遅れたPHPerがLambdaに入門してみる

AWS Lambda のような Function as a Service
はマイクロサービス化における一つの到達点に思えるのだが、これを使って実際に
web サービスを作る具体的なイメージがまだ見えない (注: すべて for me
として書いている)。

PHP on AWS Lambda があれだけ簡単に動かせるのには驚いた。

勝手に AWS Lambda だとフットプリントの軽さが求められそう (= PHP +
Laravel などでは動かなさそう)
だという先入観を持っていたのだが、この発表のデモによればそうでもないらしい。

{#1810-a}
### 18:10 [A] 大規模サイトにおけるSEO観点でのURL設計

SEO (Search Engine Optimization)
は大して知らないので新鮮な話が多かった。その分語れることも少ない……。

{#1850-a}
### 18:50 [A] PHPerでもわかる！実践Webアクセシビリティ

つい最近 WAI-ARIA
についての記事を読んだばかりだったので個人的にタイムリーな話題だった。(あまりこの言葉を使いたくないのだが)
いわゆる「健常者」にとって、こうした問題を普段の生活の中で意識するのは難しい。だからこそ情報へのアンテナは張っておくようにしたい。

{#1930-a}
### 19:30 [A] PHP でファイルシステムを作ろう

PHP で FUSE

個人的に楽しみだった発表。

期待通りの興味深い発表だった。FUSE
自体も今回の発表で知ったのだが、これ本体の実装を見るのも面白そうだ。
この発表を聞きながらファイルシステムにマウントできそうなものを考えていたのだが、およそ木構造をしているものすべてと言えそうだ
(ハンマーしか持っていないと云々)。何かできそうだがなかなか思いつかない。

{#day-1}
## Day 1 (2021/03/27)

{#1050-a}
### 10:50 [A] 実践ATDD 〜TDDから更に歩みを進めたソフトウェア開発へ〜

User Acceptance Test (UAT)
くらいの規模になると個人開発・趣味開発では触れない領域なので、大いに勉強になった。スライドに添付されている資料が相当に充実していたので、これを読むのが本番といった様相すら感じる。
高レベルテストの自動化は現在のプロジェクトでも感じており、自動化のチャンスは伺っている。とはいえセッションでも指摘されているように自動化することにコストがかかりすぎる領域があるのも事実で、そのバランスが難しい。

{#1150-a}
### 11:50 [A] 静的型解析を用いた大規模レガシーコードのリファクタリング計画

型のある世界で生きてきた身として大いに楽しみにしていた発表。

昨今、動的型付き言語での型宣言・型アノテーション・型ヒントの導入が相次いでいる。長らく静的型付き言語を書いてきた私からすると、ようやく気づいたかといったところだが、ともかく型を導入する言語が増えてきた。
今のプロジェクトでも新しく追加するコードには型をつけるよう努めているが、どうしても古いコードには型がついていない。個人的には型のないコードに対してどう型を自動的に付けるかという点に興味があり、その点で
Ruby の typeprof には注目している。

{#1310-a}
### 13:10 [A] 目的に沿ったDocumentation as Codeをいかにして実現していくか

この発表も以前から非常に楽しみにしていた。

ドキュメントの管理は現プロジェクトでも課題と感じている。作られた当初は正しくても、実態と乖離していくのを止めるのは困難を極める。全体的に興味深い発表だったが、特にスタックトレースからのドキュメント生成というアイデアに惹かれるものを感じた。スタックトレースという実態と不可分な
(乖離しない)
情報を起点にするのは理にかなっている。問題はトレースをいつ、どう取るかだろうか。それを自動化しなければ、実態との乖離が避けられないだろう。

{#1410-a}
### 14:10 [A] PHPで学ぶ、セッションの基本と応用

全体的に基本的な話だったので特に触れない。Cookie
やセッションの話としては非常に分かりやすくまとめられていたので、知らない人が学ぶにはいい教材だろう。

{#1450-a}
### 14:50 [A] PHP8になった今の時代に、PHPの「エラー」「例外」そして「Error」をおさらいしておこう

PHP を学んでいる途中の私としては、今まさに聞きたい発表だった (現時点で
PHP を書き始めてから 4ヶ月ほどになる)。

個人的に例外やエラーを最もうまく扱っているのは Go、Swift、Rust、Haskell
などのエラーを「値として」扱う言語だと思っている。try-catch
は通常の処理フローを完全に壊してしまう上、構文としても重すぎる。値としてのエラー通知は
C言語時代への回帰ともいえるが、その頃と異なるのはエラーを暗黙のうちに握り潰すことがないということだ。これらの言語は型を持っており、静的に検証ができる
(C のそれはまともな型付けではない。念のため)。

PHP
のように、すでに例外が言語システムに根ざしている言語ではどうすればよいか。この場合も同じく静的検証の力を借りることになるだろう。

{#1530-a}
### 15:30 [A] Laravel のメール認証の内部実装を掘り下げる

Laravel
の知識がない私にはまったくついていけなかった。また、個人的にタイトルがややミスリーディングに感じた。

{#1610-a}
### 16:10 [A] ブラウザから始めるgRPC 〜 gRPC-WebにPHPを添えて

(発表の中でもまさに同じことをおっしゃっていたが) PHP
以外の方が向いているだろう、というのが第一の感想である。gRPC
はそれ自体というよりも Protobuf
というエコシステムに乗れることのメリットが大きいと感じる。そのエコシステムにうまく乗れない時点で、うーんという感じ。

{#day-2}
## Day 2 (2021/03/28)

冒頭に書いた通り、2日目から体調が悪くまともに聴けていない。途中までは頭痛を我慢しつつ見ていたのだが、まともに入ってこなかった。

残念ではあるが、いずれにせよ見られていない発表は他にもあるので、今週末にでもまとめて見ようと思う。

{#comments}
## 全体の感想

Day 2
にほとんど参加できなかったのは残念だが、イベント自体は大変楽しく、また興味深いものであった。自分がまったく知らない領域の話を聞けるのはこうしたイベントならではだと感じる。オンライン開催ゆえ現地に行く必要がなく、気軽に参加できたのも
(特に初参加者として) 嬉しいポイントだった。

今回、雑談/登壇者への質問等向けに Discord
サーバもあったのだが、こちらは参加こそしたものの ROM
のままになってしまった。発表に1ウィンドウ、メモを書くのに1ウィンドウ、Discord
表示に
1ウィンドウで私にはもう脳のリソースとディスプレイのスペースが追いつかなかった
(さらにいうと Zoom
でアンカンファレンスもやっていたようだ。こちらはまったく参加していない)。

1つ個人的な反省点としては、一つ一つのセッションを真剣に聞き過ぎたというものがある。もっと適当に聞いておけばよかった。これだけだと大変語弊があるのだが、言い方を変えると、Discord
しかりアンカンファレンスしかり「このイベントのこの瞬間にしかないコンテンツ」に触れずに、後から見返せる発表やスライドに注力してしまった、ということだ。発表の詳細な見直しはあとからできるのだから、今しかできないことを考えるべきだった。
まあ初カンファレンスだし、とお茶を濁しておこう。

さて、カンファレンスで一つ気になったことがある。それは、Discord
という書き込み場所が増えたことでニコ生のコメントの流量が吸い取られてしまったのではないか、という点だ。ニコニコだけ見ていると過疎っているかのように見えた発表も、Discord
の方では盛り上がっている、というのを何度か見かけた。ニコニコのコメント方式は盛り上がりを如実に反映するが、逆もまたしかり。Discord
があったこと自体はプラスだったと思うが、この点はマイナスだったのではないかと感じる。

----------------

最後になりましたが、毎年の PHPerKaigi
開催にご尽力されている皆様、スピーカーの皆様、楽しい3日間でした。ありがとうございました！
(ずっと常体で書いてしまったのでいきなり仏頂面から笑顔になったようで気持ち悪い)

ではまた来年。
